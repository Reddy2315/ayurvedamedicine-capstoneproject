package com.wipro.ayurvedamedicine.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.wipro.ayurvedamedicine.dto.CategoryDTO;
import com.wipro.ayurvedamedicine.exception.ResourceNotFoundException;
import com.wipro.ayurvedamedicine.service.ICategoryService;

@CrossOrigin(value = "http://localhost:4200/")
@RestController
@RequestMapping("/categories")
public class CategoryController {

	@Autowired
	private ICategoryService categoryService;

	@PostMapping
	public ResponseEntity<CategoryDTO> saveCategory(@RequestBody CategoryDTO categoryDTO) {
		CategoryDTO savedCategory = categoryService.saveCategory(categoryDTO);
		return new ResponseEntity<>(savedCategory, HttpStatus.CREATED);
	}

	@PutMapping
	public ResponseEntity<CategoryDTO> updateCategory(@RequestBody CategoryDTO categoryDTO)
			throws ResourceNotFoundException {
		CategoryDTO updatedCategory = categoryService.updateCategory(categoryDTO);
		return new ResponseEntity<>(updatedCategory, HttpStatus.ACCEPTED);
	}

	@GetMapping("/{id}")
	public ResponseEntity<CategoryDTO> getCategoryById(@PathVariable Long id) throws ResourceNotFoundException {
		CategoryDTO categoryDTO = categoryService.getCategoryById(id);
		return new ResponseEntity<>(categoryDTO, HttpStatus.OK);
	}

	@GetMapping
	public ResponseEntity<List<CategoryDTO>> getAllCategories() {
		List<CategoryDTO> categories = categoryService.getAllCategories();
		return new ResponseEntity<>(categories, HttpStatus.OK);
	}

	@DeleteMapping("/{id}")
	public ResponseEntity<String> deleteCategory(@PathVariable Long id) throws ResourceNotFoundException {
		Long deletedId = categoryService.deleteCategory(id);
		return ResponseEntity.ok("Category deleted successfully with id : " + deletedId);
	}
}
